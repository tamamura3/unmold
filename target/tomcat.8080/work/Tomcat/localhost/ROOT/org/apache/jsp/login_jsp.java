/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.13
 * Generated at: 2018-12-29 14:13:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/actionTagHead.jsp", out, false);
      out.write("\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/actionTagHeader.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\t<div class=\"body-wrapper\">\n");
      out.write("\n");
      out.write("<!-- もしupdateパラメータがnullなら　純粋な訪問なのでフォームの上に普通に「loginするといいよ！」的なメッセージを出す -->\n");
      out.write("\n");
      out.write("\t\t");

			if (request.getParameter("update") == null) {
		
      out.write("\n");
      out.write("\t\t<div class=\"login-t\">LOG IN</div>\n");
      out.write("\n");
      out.write("\t\t<!-- もしupdateの中がnullじゃないなら値を調べる、success(メアド変更完了)かsuccess2(パスワード変更完了　兼　パスワード忘れて再設定完了) -->\n");
      out.write("\t\t");

			} else {
				String updatedSuccess = request.getParameter("update");
		
      out.write("\n");
      out.write("\n");
      out.write("\t\t<!-- success(メアド変更完了)　それ使ってログインしてね -->\n");
      out.write("\t\t");

			if (updatedSuccess.equals("success")) {
		
      out.write("\n");
      out.write("\t\t<div class=\"result-msg\">\n");
      out.write("\t\t\tYour mail address was changed successfully.<br>Please log in\n");
      out.write("\t\t\twith the new mail address.\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t\t<!-- success2(パスワード変更完了　兼　パスワード忘れて再設定完了)　それ使ってログインしてね -->\n");
      out.write("\t\t");

			} else if (updatedSuccess.equals("success2")) {
		
      out.write("\n");
      out.write("\t\t<div class=\"result-msg\">\n");
      out.write("\t\t\tYour password was changed successfully.<br>Please log in with\n");
      out.write("\t\t\tthe new password.\n");
      out.write("\t\t</div>\n");
      out.write("\t\t");

			}
			}
		
      out.write("\n");
      out.write("\n");
      out.write("<!-- もしloginfailパラメータがtrue（ログイン失敗！）なら　その旨メッセージを表示-->\n");
      out.write("\t\t");

			Boolean isLoginFailed = Boolean.valueOf(request.getParameter("loginfail"));
		
      out.write('\n');
      out.write('	');
      out.write('	');

			if (isLoginFailed) {
		
      out.write("<div class=\"error-msg\">Mail address or password is wrong.</div>\n");
      out.write("\t\t");

			}
		
      out.write("\n");
      out.write("\n");
      out.write("<!-- ここからは共通で表示されるフォーム部分 -->\n");
      out.write("\t\t<form action=\"LoginLogic\" name=\"userForm\" method=\"post\"\n");
      out.write("\t\t\tonsubmit=\"return validateUserForm()\" class=\"login-f\">\n");
      out.write("\t\t\t<input type=\"text\" name=\"mail\" placeholder=\"mail\" maxlength=\"200\"><br> <br>\n");
      out.write("\t\t\t<input type=\"password\" name=\"password\" placeholder=\"password\" maxlength=\"30\"><br>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t<button type=\"submit\" name=\"submit\" class=\"button\">LOGIN</button>\n");
      out.write("\t\t</form>\n");
      out.write("\t\t<a href=\"/unmold/rest-password\"><div\n");
      out.write("\t\t\t\tclass=\"forgetpass\">forgot password</div></a>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/actionTagFooter.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
